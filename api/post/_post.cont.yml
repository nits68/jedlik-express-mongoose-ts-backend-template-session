# LINK ./post.controller.ts#getAllPosts
# ANCHOR[id=getAllPosts]
/posts:
    get:
        tags:
            - Posts
        security: []
        summary: Az összes poszt lekérdezése
        description: A végpont a posztokat kérdezi lesz, a tábla összes adatával tér vissza
        responses:
            "200":
                description: OK.
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Post"
                headers:
                    x-total-count:
                        description: A posztok száma
                        schema:
                            type: number
                            example: 2332
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

    # LINK ./post.controller.ts#createPost
    # ANCHOR[id=createPost]
    post:
        tags:
            - Posts
        summary: Új post létrehozása
        description: Új poszt létrehozása a request body tartalma szerint<br>
            A poszt hivatkozása automatikusan bekerül a bejelentkezett felhasználó posztjai közé.
        requestBody:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            _id:
                                type: string
                                example: c12345678901234567890123
                            title:
                                type: string
                                example: Ez lesz az új poszt címe
                            content:
                                type: string
                                example: Ez lesz a új poszt tartalma
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Post"
                headers:
                    x-total-count:
                        description: A posztok száma
                        schema:
                            type: number
                            example: 43
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

# LINK ./post.controller.ts#getPostById
# ANCHOR[id=getPostById]
/posts/{id}:
    get:
        tags:
            - Posts
        summary: Egy post lekérdezése
        description: Post lekérdezése elsődleges-kulcs (id) alapján
        parameters:
            - name: id
              in: path
              description: Post ObjectId azonosítója
              schema:
                  type: string
                  example: "c88888888888888888888888"
              required: true
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Post"
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

    # LINK ./post.controller.ts#modifyPost
    # ANCHOR[id=modifyPost]
    patch:
        tags:
            - Posts
        summary: Egy post módosítása
        description: Az elsődleges-kulccsal (id) kijelölt post módosítása
        parameters:
            - name: id
              in: path
              description: Post ObjectId azonosítója
              schema:
                  type: string
                  example: "c12345678901234567890123"
              required: true
        requestBody:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                                example: Ez lesz a poszt VADI új címe
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Post"
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

    # LINK ./post.controller.ts#deletePost
    # ANCHOR[id=deletePost]
    delete:
        tags:
            - Posts
        summary: Egy post törlése
        description: Az elsődleges-kulccsal (id) kijelölt post törlése.<br>
            A végpont törli a poszt hivatkozását a users kollekcióból is.<br>
            Csak akkor megy végbe a törlés, ha sikeres a users kollekció módosítása is.<br>
            A művelet tranzakciókezelést használ.
        parameters:
            - name: id
              in: path
              description: A törlendő poszt ObjectId azonosítója
              schema:
                  type: string
                  example: "c12345678901234567890123"
              required: true
        responses:
            "200":
                description: OK
                headers:
                    x-total-count:
                        description: A posztok száma
                        schema:
                            type: number
                            example: 634
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PostNotFoundException"

# LINK ./post.controller.ts#getPaginatedPosts
# ANCHOR[id=getPaginatedPosts]
/posts/{offset}/{limit}/{sortField}:
    get:
        tags:
            - Posts
        summary: Paginált adatok lekérése szűrés nélkül
        description: Posztok lekérdezése lapozási lehetőséggel
        parameters:
            - name: offset
              in: path
              description: Ennyi rekordot hagyunk el (skip) a lekérdezés elejéről
              schema:
                  type: number
                  example: 0
              required: true
            - name: limit
              in: path
              description: Ennyi rekordot küld (take) maximum az API
              schema:
                  type: number
                  example: 2
              required: true
            - name: sortField
              in: path
              description: A megadott mező szerint lesznek rendezve a dokumentumok<br>
                  A "-" karakter a mezőnév előtt a csökkenő rendezést jelzi
              schema:
                  type: string
                  example: -title
              required: true
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Post"
                headers:
                    x-total-count:
                        description: A posztok száma az adatbázis szerveren
                        schema:
                            type: number
                            example: 342
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"
# LINK ./post.controller.ts#getPaginatedPosts
/posts/{offset}/{limit}/{sortField}/{filter}:
    get:
        tags:
            - Posts
        summary: Paginált adatok lekérése szűréssel
        description: Posztok lekérdezése lapozással és szűrési lehetőséggel
        parameters:
            - name: offset
              in: path
              description: Ennyi rekordot hagyunk el (skip) a lekérdezés elejéről
              schema:
                  type: number
                  example: 0
              required: true
            - name: limit
              in: path
              description: Ennyi rekordot küld (take) maximum az API
              schema:
                  type: number
                  example: 2
              required: true
            - name: sortField
              in: path
              description: A megadott mező szerint lesznek rendezve a dokumentumok<br>
                  A "-" karakter a mezőnév előtt a csökkenő rendezést jelzi
              schema:
                  type: string
                  example: -title
              required: true
            - name: filter
              in: path
              description: Szűrő - a cim és a leiras mezőkben keressük a paraméter előfordulását
              schema:
                  type: string
                  example: Gladiátor
              required: true
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Post"
                headers:
                    x-total-count:
                        description: A szűrt posztok száma az adatbázis szerveren
                        schema:
                            type: number
                            example: 342
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema: 
                            $ref: "#/components/schemas/Error"
